version: "3.7"

services:
    traefik:
        image: "traefik:v2.1"
        container_name: "traefik"
        hostname: "traefik"
        command:
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --providers.docker
            - --api
            - --accesslog=true
            - --metrics=true
            - --metrics.prometheus=true
            - --certificatesresolvers.letsencr.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
            - --certificatesresolvers.letsencr.acme.email=clint.cauley@gmail.com
            - --certificatesresolvers.letsencr.acme.storage=/acme.json
            - --certificatesresolvers.letsencr.acme.tlschallenge=true
        env_file:
            - .env
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            #- "./traefik.yml:/traefik.yml:ro"
            - "./tccauley.dev.pem:/tccauley.dev.pem:ro"
            - "./tccauley.dev.key:/tccauley.dev.key:ro"
            #- "./dynamic:/dynamic"
        labels:
            - "traefik.enable=true"

            # Dashboard
            - "traefik.http.routers.traefik.rule=Host(`monitor.tccauley.dev`)"
            - "traefik.http.routers.traefik.service=api@internal"
            - "traefik.http.routers.traefik.middlewares=auth"
            - "traefik.http.routers.traefik.tls.certresolver=letsencr"
            - "traefik.http.routers.traefik.entrypoints=websecure"

            # Redirect HTTP -> HTTPS
            - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
            - "traefik.http.routers.http-catchall.entrypoints=web"
            - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

            # Middlewares
            - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$hfxvyug9$$Jl6u78o2ZQXCQeSUZ/dqV/"
            - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

    graphql:
        image: node:13.8.0
        container_name: graphql
        hostname: graphql
        working_dir: /home/node/app
        command: sh -c "npm install && npm start"
        ports:
            - "50081:443"
        volumes:
            - "./graphql/:/home/node/app"
        depends_on:
            - traefik
        labels:
            - "traefik.enable=true"
            # GraphQL
            - "traefik.http.routers.graphql.rule=PathPrefix(`/graphql`)"
            - "traefik.http.services.graphql.loadbalancer.server.port=50081"
            - "traefik.http.routers.graphql.entrypoints=websecure"
            - "traefik.http.routers.graphql.tls=true"
            - "traefik.http.routers.graphql.tls.certresolver=letsencr"

            # Middlewares
            #- "traefik.http.middlewares.graphql.stripprefix.prefixes=/graphql"

    blog:
        image: nginx:1.17.8-alpine
        container_name: blog
        hostname: blog
        ports:
            - "50082:443"
        volumes:
            - "./default.conf:/etc/nginx/conf.d/default.conf"
            #- "./nginx/index.html:/usr/share/nginx/html/index.html"
        depends_on:
            - traefik
        labels:
            - "traefik.enable=true"

            - "traefik.http.routers.blog.rule=Host(`blog.tccauley.dev`)"
            - "traefik.http.routers.blog.entrypoints=websecure"
            - "traefik.http.routers.blog.tls=true"
            - "traefik.http.routers.blog.tls.certresolver=letsencr"

    metrics:
        image: prom/prometheus:v2.16.0
        container_name: metrics
        hostname: metrics
        ports:
            - "9090:9090"
        volumes:
            - "./prometheus/:/etc/prometheus"
            - "/var/lib/docker/volumes/prom-vol/_data:/prometheus/"
        depends_on:
            - traefik
            - blog
            - graphql
        labels:
            - "traefik.enable=true"

            - "traefik.http.routers.metrics.rule=PathPrefix(`/metrics`) || PathPrefix(`/graph`) || PathPrefix(`/alerts`) || PathPrefix(`/flags`)|| PathPrefix(`/status`) || PathPrefix(`/config`) || PathPrefix(`/rules`) || PathPrefix(`/targets`) || PathPrefix(`/service-discovery`) || PathPrefix(`/new/graph`)"
            - "traefik.http.routers.metrics.entrypoints=websecure"
            - "traefik.http.routers.metrics.tls=true"
            - "traefik.http.routers.metrics.tls.certresolver=letsencr"
            - "traefik.http.routers.metrics.middlewares=auth"

networks:
    default:
        external:
            name: $DEFAULT_NETWORK
